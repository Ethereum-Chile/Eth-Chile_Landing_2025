---
import { Image } from "astro:assets";
// Logo is now served from public directory
---

<header
  class="flex w-full min-h-[10vh] justify-between items-center px-10 fixed top-0 left-0 bg-transparent z-50 animate-fade-in"
  style="animation: fadeIn 1s ease-in-out;"
>
  <a
    href="javascript:void(0);"
    class="flex items-center -ml-10 lg:ml-0"
    onclick="window.scrollTo(0, 0);"
  >
    <!-- Mobile Logo (ethchile_logotipo_B.png) -->
    <Image
      src="/ethchile_logotipo_B.png"
      alt="Logo Ethereum Chile"
      width={108}
      height={54}
      class="w-24 h-12 lg:hidden object-contain"
    />
    <!-- Desktop Logo (ethchile_logotipo_A.png) -->
    <Image
      src="/ethchile_logotipo_A.png"
      alt="Logo Ethereum Chile"
      width={240}
      height={120}
      class="hidden lg:block w-[240px] h-[120px] object-contain"
    />
  </a>

  <!-- Buy Ticket Button -->
  <div class="flex items-center space-x-4">
    <!-- Language Selector -->
    <div class="flex items-center space-x-1">
      <button
        class="px-3 py-2 text-white font-raleway font-medium text-sm"
        onclick="setLanguage('en')"
        id="lang-en"
      >
        EN
      </button>
      <button
        class="px-3 py-2 text-white font-raleway font-medium text-sm"
        onclick="setLanguage('es')"
        id="lang-es"
      >
        ES
      </button>
    </div>

    <a
      href="https://welcu.com/ethereum-chile/ethchile-2025/"
      target="_blank"
      rel="noopener noreferrer"
      class="relative px-6 py-3 text-white font-raleway font-medium rounded-lg transition-all duration-300 ease-in-out transform hover:scale-105 overflow-hidden group backdrop-blur-md border border-white/40 hover:border-white/60 hover:shadow-[0_0_25px_rgba(255,255,255,0.4)]"
      id="buy-tickets-btn"
      style="backdrop-filter: blur(10px); box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);"
    >
      <!-- Frosted glass background -->
      <div class="absolute inset-0 bg-white/5 backdrop-blur-md rounded-lg">
      </div>

      <!-- Shiny hover effect -->
      <div
        class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-700 ease-out rounded-lg"
      >
      </div>

      <!-- Glowing border effect -->
      <div
        class="absolute inset-0 rounded-lg bg-gradient-to-r from-white/20 via-white/10 to-white/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"
      >
      </div>

      <!-- Button text -->
      <span class="relative z-10">Buy Tickets</span>
    </a>
  </div>
</header>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Active language button styling */
  .lang-active {
    background-color: white;
    color: black;
  }
</style>

<script>
  // Language switching functionality
  function setLanguage(lang) {
    // Remove active class from all language buttons
    document.getElementById("lang-en").classList.remove("lang-active");
    document.getElementById("lang-es").classList.remove("lang-active");

    // Add active class to selected language
    document.getElementById(`lang-${lang}`).classList.add("lang-active");

    // Store language preference
    localStorage.setItem("preferred-language", lang);

    // Update button text based on language
    const buyTicketsBtn = document.getElementById("buy-tickets-btn");
    if (buyTicketsBtn) {
      const buttonText = buyTicketsBtn.querySelector("span");
      if (buttonText) {
        buttonText.textContent =
          lang === "es" ? "Comprar Entradas" : "Buy Tickets";
      }
    }

    // Dispatch custom event for other components to listen to
    window.dispatchEvent(
      new CustomEvent("languageChanged", { detail: { language: lang } })
    );

    // You can add actual language switching logic here
    console.log(`Language switched to: ${lang}`);
  }

  // Set initial language on page load
  document.addEventListener("DOMContentLoaded", function () {
    const savedLang = localStorage.getItem("preferred-language") || "en";
    setLanguage(savedLang);
  });
</script>
