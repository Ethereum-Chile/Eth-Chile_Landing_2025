---
import ScrollExpandMedia from "./ScrollExpandMedia.tsx";
---

<section
  class="min-h-screen relative"
  style="background-color: #0a0a0a"
  id="what-makes-unique-section"
>
  {/* Content Overlay */}
  <div class="relative z-10">
    <ScrollExpandMedia
      client:load
      mediaType="video"
      mediaSrc="https://www.youtube.com/embed/JavAmLx8EG0?autoplay=1&mute=1&loop=1&controls=0&showinfo=0&rel=0&disablekb=1&modestbranding=1&playlist=JavAmLx8EG0&start=30"
      posterSrc="https://images.pexels.com/videos/5752729/space-earth-universe-cosmos-5752729.jpeg"
      title="What Makes ETHChile Unique"
      date="Latin America's Premier Ethereum Event"
      scrollToExpand="Scroll to Discover More"
    >
      <div class="max-w-6xl mx-auto">
        <div class="text-center mb-6">
          <h2
            class="text-4xl md:text-5xl lg:text-6xl font-raleway font-bold text-white leading-tight"
          >
            Chile is the perfect hub for<br />
            Ethereum Innovation
          </h2>
        </div>
        <p class="text-lg text-gray-300 text-center max-w-4xl mx-auto">
          Discover why Chile's unique combination of regulatory clarity, fintech
          infrastructure, and technological talent makes it the ideal location
          for the next generation of blockchain innovation.
        </p>
      </div>
    </ScrollExpandMedia>
  </div>
</section>

<script>
  let isVideoFullyExpanded = false;
  let isContentShowing = false;
  let isBottomTitleVisible = false;
  let shouldFadeOut = false;

  // Listen for ScrollExpandMedia state changes
  function handleScrollExpandState(event) {
    if (event.detail && event.detail.type === "videoExpanded") {
      isVideoFullyExpanded = true;
      console.log("Video fully expanded - ready for fade-out trigger");
    }
    if (event.detail && event.detail.type === "contentShowing") {
      isContentShowing = true;
      console.log("Content showing - starting background fade-out");
    }
  }

  // Listen for bottom title visibility changes
  function handleBottomTitleVisibility(event) {
    if (event.detail && event.detail.type === "titleVisible") {
      isBottomTitleVisible = event.detail.isVisible;
      console.log("Bottom title visibility changed:", isBottomTitleVisible);

      // If bottom title is visible and user continues scrolling, start fade out
      if (isBottomTitleVisible) {
        shouldFadeOut = true;
      } else {
        shouldFadeOut = false;
      }
    }
  }

  // Background fade-out effect (triggers when bottom title is visible and user scrolls)
  function updateBackgroundOpacity() {
    const section = document.getElementById("what-makes-unique-section");

    if (!section) {
      console.log("Section not found");
      return;
    }

    let backgroundOpacity = 1; // Start with full opacity

    // Only start fading when bottom title is visible and user continues scrolling
    if (shouldFadeOut && isBottomTitleVisible) {
      const rect = section.getBoundingClientRect();
      const windowHeight = window.innerHeight;

      // Start fading when section top is at 20% of viewport height (more conservative)
      const triggerPoint = windowHeight * 0.2;

      // Start fading when section top crosses the trigger point
      if (rect.top <= triggerPoint && rect.bottom > 0) {
        // Calculate how much we've scrolled past the trigger
        const scrollPastTrigger = Math.max(0, triggerPoint - rect.top);
        const maxScrollDistance = windowHeight * 0.4; // Fade over 40% of viewport height

        const fadeProgress = Math.min(1, scrollPastTrigger / maxScrollDistance);
        // Fade from 1 (full opacity) to 0 (completely transparent)
        backgroundOpacity = Math.max(0, 1 - fadeProgress);
      }
    }

    // Target only the background elements, not the text content
    // Find the background motion.div with z-0 class
    const backgroundElements = section.querySelectorAll(
      ".absolute.inset-0.z-0"
    );
    backgroundElements.forEach((element) => {
      (element as HTMLElement).style.opacity = backgroundOpacity.toString();
    });

    // Also target any video elements within the section
    const videoElements = section.querySelectorAll("iframe, video");
    videoElements.forEach((element) => {
      (element as HTMLElement).style.opacity = backgroundOpacity.toString();
    });

    console.log(
      "Background opacity:",
      backgroundOpacity,
      "Bottom title visible:",
      isBottomTitleVisible,
      "Should fade out:",
      shouldFadeOut,
      "Background elements found:",
      backgroundElements.length
    );
  }

  // Listen for custom events from ScrollExpandMedia
  window.addEventListener("scrollExpandState", handleScrollExpandState);
  window.addEventListener("bottomTitleVisible", handleBottomTitleVisibility);

  // Add scroll event listener
  window.addEventListener("scroll", updateBackgroundOpacity, { passive: true });
  window.addEventListener("resize", updateBackgroundOpacity);

  // Initial call
  updateBackgroundOpacity();
</script>
