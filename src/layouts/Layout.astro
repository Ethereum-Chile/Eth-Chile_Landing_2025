---
import "@fontsource-variable/raleway";
import "@fontsource-variable/open-sans";
import { PrivyAppProvider } from "../components/PrivyProvider.tsx";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" style="scroll-behavior: smooth;">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="favicon.ico?" />
    <meta name="generator" content={Astro.generator} />
    <meta name="theme-color" content="#000000" />
    <title>{title}</title>

    <!-- OpenGraph Meta Tags -->
    <meta
      property="og:title"
      content="ETHChile 2025 - Ethereum Meets the Real World"
    />
    <meta
      property="og:description"
      content="Join Latin America's premier Ethereum event in Santiago, Chile. Experience the convergence of traditional finance and decentralized innovation."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://ethchile.com" />
    <meta property="og:image" content="/imgs/eth_chile2025.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta
      property="og:image:alt"
      content="ETHChile 2025 - Ethereum Conference in Chile"
    />
    <meta property="og:site_name" content="ETHChile" />
    <meta property="og:locale" content="es_CL" />

    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:title"
      content="ETHChile 2025 - Ethereum Meets the Real World"
    />
    <meta
      name="twitter:description"
      content="Join Latin America's premier Ethereum event in Santiago, Chile. Experience the convergence of traditional finance and decentralized innovation."
    />
    <meta name="twitter:image" content="/imgs/eth_chile2025.png" />
    <meta
      name="twitter:image:alt"
      content="ETHChile 2025 - Ethereum Conference in Chile"
    />

    <!-- Additional Meta Tags -->
    <meta
      name="description"
      content="Join Latin America's premier Ethereum event in Santiago, Chile. Experience the convergence of traditional finance and decentralized innovation."
    />
    <meta
      name="keywords"
      content="Ethereum, ETHChile, blockchain, DeFi, Web3, Chile, Latin America, cryptocurrency, fintech"
    />
    <meta name="author" content="ETHChile Team" />

    <!-- Canonical URL -->
    <link rel="canonical" href="https://ethchile.com" />
    <script>
      // Polyfill for global
      if (typeof global === "undefined") {
        window.global = window;
      }
    </script>
    <style>
      :root {
        /* Light theme variables */
        --bg-primary-light: #ffffff;
        --bg-secondary-light: #f8f9fa;
        --text-primary-light: #1a1a1a;
        --text-secondary-light: #4a5568;
        --border-light: #e2e8f0;
        --accent-light: #3b82f6;

        /* Dark theme variables */
        --bg-primary-dark: #0a0a0a;
        --bg-secondary-dark: #1a1a1a;
        --text-primary-dark: #ffffff;
        --text-secondary-dark: #a0aec0;
        --border-dark: #2d3748;
        --accent-dark: #60a5fa;

        /* Default to dark theme */
        --bg-primary: var(--bg-primary-dark);
        --bg-secondary: var(--bg-secondary-dark);
        --text-primary: var(--text-primary-dark);
        --text-secondary: var(--text-secondary-dark);
        --border: var(--border-dark);
        --accent: var(--accent-dark);
      }

      /* Light theme */
      .theme-light {
        --bg-primary: var(--bg-primary-light);
        --bg-secondary: var(--bg-secondary-light);
        --text-primary: var(--text-primary-light);
        --text-secondary: var(--text-secondary-light);
        --border: var(--border-light);
        --accent: var(--accent-light);
      }

      /* Dark theme */
      .theme-dark {
        --bg-primary: var(--bg-primary-dark);
        --bg-secondary: var(--bg-secondary-dark);
        --text-primary: var(--text-primary-dark);
        --text-secondary: var(--text-secondary-dark);
        --border: var(--border-dark);
        --accent: var(--accent-dark);
      }

      /* Smooth transitions */
      * {
        transition:
          background-color 0.3s ease,
          color 0.3s ease,
          border-color 0.3s ease;
      }

      /* Dark gradient background */
      .bg-dark-gradient {
        background: linear-gradient(
          135deg,
          var(--bg-primary) 0%,
          var(--bg-secondary) 100%
        );
        min-height: 100vh;
      }

      /* Light gradient background */
      .bg-light-gradient {
        background: linear-gradient(
          135deg,
          var(--bg-primary) 0%,
          var(--bg-secondary) 100%
        );
        min-height: 100vh;
      }

      /* Logo carousel animation */
      @keyframes scroll {
        0% {
          transform: translateX(0);
        }
        100% {
          transform: translateX(-50%);
        }
      }

      .animate-scroll {
        animation: scroll 30s linear infinite;
      }

      /* Custom black background */
      .bg-custom-black {
        background-color: #000000;
      }

      /* Parallax hover effect */
      .parallax-img {
        transition: transform 0.1s ease-out;
        transform-style: preserve-3d;
        will-change: transform;
      }

      .parallax-img:hover {
        transform: perspective(1000px)
          rotateX(calc(var(--f) * var(--mouse-y, 0) * 1deg))
          rotateY(calc(var(--f) * var(--mouse-x, 0) * 1deg)) scale(1.05);
      }
    </style>
  </head>
  <body class="flex flex-col min-h-screen text-white relative">
    <PrivyAppProvider client:load>
      <slot />
    </PrivyAppProvider>
    <script src="../utils/carousel.js"></script>
    <script>
      // Initialize theme manager on client side
      import("../utils/theme.js").then(({ themeManager }) => {
        // Force initialization on client side
        themeManager.forceInit();

        console.log(
          "Theme manager initialized:",
          themeManager.getCurrentTheme()
        );

        // Update body classes based on theme
        const updateBodyClasses = () => {
          const theme = themeManager.getCurrentTheme();
          document.body.className = `flex flex-col min-h-screen relative ${
            theme === "light"
              ? "text-black bg-light-gradient"
              : "text-white bg-dark-gradient"
          }`;
        };

        // Initial update
        updateBodyClasses();

        // Listen for theme changes
        window.addEventListener("themeChanged", (event) => {
          console.log("Theme changed to:", (event as CustomEvent).detail.theme);
          updateBodyClasses();
        });
      });
    </script>
  </body>
</html>
